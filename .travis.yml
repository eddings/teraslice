language: node_js
node_js:
- '8'
addons:
  apt:
    packages:
      - docker-ce
      - jq
cache:
  timeout: 60
  yarn: true
  directories:
    - node_modules
services:
  - docker
  - elasticsearch
before_install: ./scripts/travis-before-install.sh
install:
    - yarn
    - yarn setup
jobs:
  # stop if given a reason
  fast-finish: true

  include:
  - stage: setup
    name: Setup Cached
    install: yarn
    script: echo '* skipping test because this is just for cache'

  # tests only on master and on pull-request
  - stage: Tests
    name: Test Packages
    if: branch = master
    script:
        - '[[ -z "$DEBUG" ]] && yarn test:ci || yarn test:debug | yarn bunyan -o short'
    after_success:
      - bash <(curl -s https://codecov.io/bash)

  # benchmarks and linting, only on pull-requests
  - script:
    name: Benchmarks and Linting
    if: branch = master AND type = pull_request
    services: []
    addons: []
    script:
        - yarn lint
        - yarn benchmark

  # test end-to-end tests, only on pull-requests
  - script:
    name: End-to-End Tests
    if: branch = master AND type IN (pull_request, cron) AND fork = false
    services: []
    before_script: cd e2e
    script: yarn test:ci

  # if not a tagged build and is on master release any changed versions to NPM
  - stage: Publish
    name: NPM Publish
    if: tag IS blank AND branch = master AND type NOT IN (pull_request, cron)
    script: cp README.md ./packages/teraslice/README.md
    before_deploy: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
    deploy:
      - provider: script
        skip_cleanup: true
        script: ./scripts/publish.sh

  # tagged releases
  - stage: Release
    name: Release
    if: tag IS present AND type NOT IN (pull_request, cron)
    deploy:
      - provider: script
        script: ./scripts/docker-release.sh

  # nightly releases
  - stage: Nightly
    name: Nightly Builds
    if: type = cron
    deploy:
      - provider: script
        script: ./scripts/docker-release.sh nightly
